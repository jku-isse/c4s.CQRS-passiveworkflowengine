package processdefinition;

import org.axonframework.commandhandling.gateway.CommandGateway;

import java.util.stream.Collectors;
import java.util.Optional
import java.time.Instant
import java.util.concurrent.TimeUnit
import java.util.List
import java.util.ArrayList
import java.util.Map
import java.util.HashMap
import java.util.LinkedHashMap
import java.util.Iterator;
import java.net.URL;

import passiveprocessengine.definition.ArtifactTypes
import passiveprocessengine.instance.*
import passiveprocessengine.definition.*
import passiveprocessengine.definition.TaskLifecycle.State;

import artifactapi.ResourceLink
import artifactapi.IArtifactRegistry
import artifactapi.ArtifactIdentifier
import artifactapi.IArtifactRegistry
import at.jku.designspace.sdk.polarion.interfaces.*
import artifactapi.jira.IJiraArtifact
import artifactapi.jira.subtypes.*

import org.jsoup.Jsoup
import org.jsoup.nodes.*
import c4s.impactassessment.tools.*

import impactassessment.kiesession.KieSessionUtils
import impactassessment.api.Commands.*
import impactassessment.api.Events.*
import org.axonframework.commandhandling.gateway.CommandGateway


global CommandGateway commandGateway;
global IArtifactRegistry artifactRegistry;


rule "InsertQAConstraintsStateResolved"
	when
        $wft : WorkflowTask( getType().getId().equals("FirstStep") &&
                                    getAnyOneOutputByRole(ArtifactTypes.ARTIFACT_TYPE_QA_CHECK_DOCUMENT) == null) // when first created, thus no assocated QADocument
	then
		Map<String, String> constraints = new LinkedHashMap<>();
		constraints.put("AssigneeNotEmpty", "Is the Jira Assignee not empty?");
		constraints.put("AuthorNotEmpty", "Is the Jira Author not empty?");		
		commandGateway.send(new AddConstraintsCmd($wft.getWorkflow().getId(), $wft.getId(), constraints));
end




rule "AssigneeNotEmpty"
	no-loop
	when
		$ct : ConstraintTrigger()
		$qac : RuleEngineBasedConstraint( isAffectedBy($ct) && getConstraintType().equals( "AssigneeNotEmpty" ))
		$wft : WorkflowTask( getType().getId().equals("FirstStep") ,  $jira : getAnyOneInputByRole("req") )		
		eval($jira != null)
	then
		IJiraArtifact jira = (IJiraArtifact)$jira;
		boolean success = ( jira.getAssignee() != null );
		Map<ResourceLink, Boolean> result = new HashMap<ResourceLink, Boolean>();
		result.put($jira.convertToResourceLink(), success);
		commandGateway.send(new AddEvaluationResultToConstraintCmd($qac.getWorkflow().getId(), $wft.getId(), $qac.getId(), result, $ct.getRequestCorrelation(), Instant.now()));
end	 

rule "AuthorNotEmpty"
	no-loop
	when
		$ct : ConstraintTrigger()
		$qac : RuleEngineBasedConstraint( isAffectedBy($ct) && getConstraintType().equals( "AuthorNotEmpty" ))
		$wft : WorkflowTask( getType().getId().equals("FirstStep") ,  $jira : getAnyOneInputByRole("req") )		
		eval($jira != null)
	then
		IJiraArtifact jira = (IJiraArtifact)$jira;
		boolean success = ( jira.getReporter() != null );
		Map<ResourceLink, Boolean> result = new HashMap<ResourceLink, Boolean>();
		result.put($jira.convertToResourceLink(), success);
		commandGateway.send(new AddEvaluationResultToConstraintCmd($qac.getWorkflow().getId(), $wft.getId(), $qac.getId(), result, $ct.getRequestCorrelation(), Instant.now()));
end	 



rule "CopyInToOut"
	when
		$wft : WorkflowTask (   getType().getId().equals("FirstStep") &&
								!(getActualLifecycleState().equals(TaskLifecycle.State.COMPLETED)) &&
								 getAnyOneOutputByRole("relItems") == null 
								 , $item : getAnyOneInputByRole("req") 								
							 ) 
		eval ($item != null )					 
	then
		System.out.println("Copying into output relItems");
		IJiraArtifact jira = (IJiraArtifact)$item;		
		commandGateway.send(new AddOutputCmd($wft.getWorkflow().getId(), $wft.getId(), jira.getId(), "relItems", "IJiraArtifact"));			
end

rule "TriggerCompletionOfOpenTask"
no-loop
	when // just some example based on demodata
		$wft : WorkflowTask (   getType().getId().equals("FirstStep") &&
								!(getActualLifecycleState().equals(TaskLifecycle.State.COMPLETED)) 
								, $req : getAnyOneInputByRole("req") 							
							 ) 		 
		eval ($req != null && (((IJiraArtifact)$req).getStatus().getName().equalsIgnoreCase("In Progress")) )
	then
		commandGateway.send(new SetPostConditionsFulfillmentCmd($wft.getWorkflow().getId(), $wft.getId(), true));
end

rule "SetWFName"
	salience 3000
	when
		$wfi : WorkflowInstance( getName() == null )	
		$wft : WorkflowTask( getType().getId().equals("FirstStep") && $wft.getWorkflow().getName() == null 
				,  $item : getAnyOneInputByRole("req") )		
		eval ($item != null )	
	then
		IJiraArtifact jira = (IJiraArtifact)$item;
		LinkedHashMap propsToAdd = new LinkedHashMap<String,String>();
		propsToAdd.put("name", jira.getKey());
		commandGateway.send(new SetPropertiesCmd($wfi.getId(), $wfi.getId(), propsToAdd));
end
