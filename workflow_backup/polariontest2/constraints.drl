package processdefinition;

import org.axonframework.commandhandling.gateway.CommandGateway;

import java.util.stream.Collectors;
import java.util.Optional
import java.time.Instant
import java.util.concurrent.TimeUnit
import java.util.List
import java.util.ArrayList
import java.util.Map
import java.util.HashMap
import java.util.LinkedHashMap
import java.util.Iterator;
import java.net.URL;

import passiveprocessengine.definition.ArtifactTypes
import passiveprocessengine.instance.*
import passiveprocessengine.definition.*
import passiveprocessengine.definition.TaskLifecycle.State;

import artifactapi.ResourceLink
import artifactapi.IArtifactRegistry
import artifactapi.ArtifactIdentifier
import artifactapi.IArtifactRegistry
import at.jku.designspace.sdk.polarion.interfaces.*
import artifactapi.jira.IJiraArtifact
import artifactapi.jira.subtypes.*

import org.jsoup.Jsoup
import org.jsoup.nodes.*
import c4s.impactassessment.tools.*

import impactassessment.kiesession.KieSessionUtils
import impactassessment.api.Commands.*
import impactassessment.api.Events.*
import org.axonframework.commandhandling.gateway.CommandGateway


global CommandGateway commandGateway;
global IArtifactRegistry artifactRegistry;


rule "InsertQAConstraintsStateResolved"
salience 3000
	when
        $wft : WorkflowTask( getType().getId().equals("Open") &&
                                    getAnyOneOutputByRole(ArtifactTypes.ARTIFACT_TYPE_QA_CHECK_DOCUMENT) == null) // when first created, thus no assocated QADocument
	then
		Map<String, String> constraints = new LinkedHashMap<>();
		constraints.put("AssigneeNotEmpty", "Is the Jira Assignee not empty?");
		constraints.put("AuthorNotEmpty", "Is the Jira Author not empty?");
		constraints.put("CheckDoDisFilled", "Is the mandatory DoD field filled?");
		constraints.put("CheckDescriptionIsFilled", "Is the mandatory Description field filled?");
		constraints.put("CheckPolarionDescriptionNotNull", "Does the Polarion Description contain some content?");		
		commandGateway.send(new AddConstraintsCmd($wft.getWorkflow().getId(), $wft.getId(), constraints));
end




rule "AssigneeNotEmpty"
	no-loop
	when
		$ct : ConstraintTrigger()
		$qac : RuleEngineBasedConstraint( isAffectedBy($ct) && getConstraintType().equals( "AssigneeNotEmpty" ))
		$wft : WorkflowTask( getType().getId().equals("Open") ,  $jira : getAnyOneInputByRole("jira") )		
		eval($jira != null)
	then
		IJiraArtifact jira = (IJiraArtifact)$jira;
		boolean success = ( jira.getAssignee() != null );
		Map<ResourceLink, Boolean> result = new HashMap<ResourceLink, Boolean>();
		result.put($jira.convertToResourceLink(), success);
		commandGateway.send(new AddEvaluationResultToConstraintCmd($qac.getWorkflow().getId(), $wft.getId(), $qac.getId(), result, $ct.getRequestCorrelation(), Instant.now()));
end	 

rule "AuthorNotEmpty"
	no-loop
	when
		$ct : ConstraintTrigger()
		$qac : RuleEngineBasedConstraint( isAffectedBy($ct) && getConstraintType().equals( "AuthorNotEmpty" ))
		$wft : WorkflowTask( getType().getId().equals("Open") ,  $jira : getAnyOneInputByRole("jira") )		
		eval($jira != null)
	then
		IJiraArtifact jira = (IJiraArtifact)$jira;
		boolean success = ( jira.getReporter() != null );
		Map<ResourceLink, Boolean> result = new HashMap<ResourceLink, Boolean>();
		result.put($jira.convertToResourceLink(), success);
		commandGateway.send(new AddEvaluationResultToConstraintCmd($qac.getWorkflow().getId(), $wft.getId(), $qac.getId(), result, $ct.getRequestCorrelation(), Instant.now()));
end	 

rule "CheckDoDisFilled"
	when
		$ct : ConstraintTrigger()
		$qac : RuleEngineBasedConstraint( isAffectedBy($ct) && getConstraintType().equals( "CheckDoDisFilled" ))
		$wft : WorkflowTask( getType().getId().equals("Open")
								 , $item : getAnyOneInputByRole("jira") 								
							 ) 
		eval ($item != null )					 
	then
		IJiraArtifact jira = (IJiraArtifact)$item;
		IJiraIssueField refField = jira.getField("customfield_10041"); //DoD
		boolean success =  (refField != null && refField.getValue().toString().length() > 5 ) 	;

		Map<ResourceLink, Boolean> result = new HashMap<ResourceLink, Boolean>();
		result.put($item.convertToResourceLink(), success);
		commandGateway.send(new AddEvaluationResultToConstraintCmd($qac.getWorkflow().getId(), $wft.getId(), $qac.getId(), result, $ct.getRequestCorrelation(), Instant.now()));
end

rule "CheckDescriptionIsFilled"
	when
		$ct : ConstraintTrigger()
		$qac : RuleEngineBasedConstraint( isAffectedBy($ct) && getConstraintType().equals( "CheckDescriptionIsFilled" ))
		$wft : WorkflowTask( getType().getId().equals("Open")
								 , $item : getAnyOneInputByRole("jira") 								
							 ) 
		eval ($item != null )					 
	then
		IJiraArtifact jira = (IJiraArtifact)$item;
		String descr = jira.getDescription(); 
		boolean success =  (descr != null && descr.length() > 5 ) 	;

		Map<ResourceLink, Boolean> result = new HashMap<ResourceLink, Boolean>();
		result.put($item.convertToResourceLink(), success);
		commandGateway.send(new AddEvaluationResultToConstraintCmd($qac.getWorkflow().getId(), $wft.getId(), $qac.getId(), result, $ct.getRequestCorrelation(), Instant.now()));
end


rule "CheckPolarionDescriptionNotNull"
	no-loop
	when
		$ct : ConstraintTrigger()
		$qac : RuleEngineBasedConstraint( isAffectedBy($ct) && getConstraintType().equals( "CheckPolarionDescriptionNotNull" ))
		$wft : WorkflowTask( getType().getId().equals("Open") ,  $item : getAnyOneOutputByRole("workitem") )							
		eval ($item != null)	
	then		
		boolean success = ( $item instanceof IPolarionArtifact && ((IPolarionArtifact)$item).getDescription() != null && ((IPolarionArtifact)$item).getDescription().length() > 0);			
		Map<ResourceLink, Boolean> result = new HashMap<ResourceLink, Boolean>();
		result.put($item.convertToResourceLink(), success);
		commandGateway.send(new AddEvaluationResultToConstraintCmd($qac.getWorkflow().getId(), $wft.getId(), $qac.getId(), result, $ct.getRequestCorrelation(), Instant.now()));
end



rule "CopyInToOut"
	salience 2500
	when
		$wft : WorkflowTask (   getType().getId().equals("Open") &&
								!(getActualLifecycleState().equals(TaskLifecycle.State.COMPLETED)) &&
								 getAnyOneOutputByRole("workitem") == null 
								 , $item : getAnyOneInputByRole("jira") 								
							 ) 
		eval ($item != null )					 
	then
		System.out.println("Copying into output polarion workitem");
		IJiraArtifact jira = (IJiraArtifact)$item;
		
			String uriStr = jira.getDescription();
			try {
				URL uri = new URL(uriStr);
				String ref = uri.getRef();
				String query = ref.substring(ref.lastIndexOf('?')+1);
				String id = URLExtractor.returnFirstValueFromQueryForKey(query, "id");
				commandGateway.send(new AddOutputCmd($wft.getWorkflow().getId(), $wft.getId(), id, "workitem", "IPolarionArtifact"));
			} catch (Exception e) {
				System.err.println(e);	
			}		
end

rule "SetWFName"
	salience 3000
	when
		$wfi : WorkflowInstance( getName() == null )	
		$wft : WorkflowTask( getType().getId().equals("Open") ,  $item : getAnyOneOutputByRole("workitem") )
		eval ($item != null )	
	then
		IPolarionArtifact pol = (IPolarionArtifact)$item;
		LinkedHashMap propsToAdd = new LinkedHashMap<String,String>();
		propsToAdd.put("name", pol.getTitle());
		commandGateway.send(new SetPropertiesCmd($wfi.getId(), $wfi.getId(), propsToAdd));
end
