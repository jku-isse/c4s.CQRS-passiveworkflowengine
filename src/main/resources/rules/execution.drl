package rules;

import org.slf4j.Logger
import org.axonframework.commandhandling.gateway.CommandGateway

import impactassessment.model.workflowmodel.DecisionNodeDefinition.States
import impactassessment.model.workflowmodel.WorkflowInstance
import impactassessment.model.workflowmodel.DecisionNodeInstance
import impactassessment.model.workflowmodel.DecisionNodeDefinition
import impactassessment.model.workflowmodel.TaskDefinition
import impactassessment.model.workflowmodel.WorkflowTask
import impactassessment.model.workflowmodel.TaskLifecycle.Events
import impactassessment.model.workflowmodel.AbstractWorkflowInstanceObject
import impactassessment.model.workflowmodel.WorkflowDefinition
import impactassessment.model.definition.DronologyWorkflow

import impactassessment.api.CompleteDataflowCmd
import impactassessment.api.ActivateInBranchCmd
import impactassessment.api.ActivateOutBranchCmd

import impactassessment.mock.artifact.Artifact

import java.util.List
import java.util.Set


global CommandGateway commandGateway;

rule "AddWPTicketAsInputToNewTasks"
    when // matches any inBranch for the Workflow waiting for input,
    	$a : Artifact(  )
        $dni : DecisionNodeInstance( getWorkflow().getId().equals($a.getId()) &&
        							 getWorkflow().getWorkflowDefinition().getId().equals(DronologyWorkflow.WORKFLOW_TYPE) &&
									 state == DecisionNodeDefinition.States.PASSED_OUTBRANCH_CONDITIONS
									 , $wfi : getWorkflow() )
									 	@watch ( state )
    then      // creates the task and adds the ticket as input
        commandGateway.send(new CompleteDataflowCmd($wfi.getId(), $dni.getId(), $a));

end

rule "Open2InProgress-InBranchConditions"
    when
    	$a : Artifact( getField("status").equals(DronologyWorkflow.TASK_STATE_IN_PROGRESS) )
        $task : WorkflowTask( getTaskType().getId().equals(DronologyWorkflow.TASK_STATE_OPEN) )
        						@watch ( outputState, lifecycleState )
        $dn : DecisionNodeInstance( getWorkflow().getId().equals($a.getId()) &&
        							getWorkflow().getId().equals($task.getWorkflow().getId()) &&
        							getDefinition().getId().equals("open2inProgressOrResolved") &&
        							getInBranchForWorkflowTask($task) != null &&
        							!isTaskCompletionConditionsFullfilled()
        							, $wfi : getWorkflow() )
    then
        commandGateway.send(new ActivateInBranchCmd($wfi.getId(), $dn.getId(), $task.getId()));
        commandGateway.send(new ActivateOutBranchCmd($wfi.getId(), $dn.getId(), "inProgressIn"));
end

rule "InProgress2Resolved-InBranchConditions"
    when
    	$a : Artifact( getField("status").equals("Resolved") )
        $task : WorkflowTask( getTaskType().getId().equals("In Progress"))
        						@watch ( outputState, lifecycleState )
        $dn : DecisionNodeInstance( getWorkflow().getId().equals($a.getId()) &&
        							getWorkflow().getId().equals($task.getWorkflow().getId()) &&
        							getDefinition().getId().equals("inProgressToResolved") &&
        							getInBranchForWorkflowTask($task) != null &&
        							!isTaskCompletionConditionsFullfilled()
        							, $wfi : getWorkflow() )
    then
        commandGateway.send(new ActivateInBranchCmd($wfi.getId(), $dn.getId(), $task.getId()));
        commandGateway.send(new ActivateOutBranchCmd($wfi.getId(), $dn.getId(), "resolvedIn"));
end

rule "Open2Resolved-InBranchConditions"
    when
    	$a : Artifact( getField("status").equals(DronologyWorkflow.TASK_STATE_RESOLVED) || getField("status").equals("Closed") )
        $task : WorkflowTask( getTaskType().getId().equals(DronologyWorkflow.TASK_STATE_OPEN) )
        						@watch ( outputState, lifecycleState )
        $dn : DecisionNodeInstance( getWorkflow().getId().equals($a.getId()) &&
        							getWorkflow().getId().equals($task.getWorkflow().getId()) &&
        							getDefinition().getId().equals("open2inProgressOrResolved") &&
        							getInBranchForWorkflowTask($task) != null &&
        							!isTaskCompletionConditionsFullfilled()
        							, $wfi : getWorkflow() )
    then
        commandGateway.send(new ActivateInBranchCmd($wfi.getId(), $dn.getId(), $task.getId()));
        commandGateway.send(new ActivateOutBranchCmd($wfi.getId(), $dn.getId(), "inProgressIn"));
        commandGateway.send(new ActivateOutBranchCmd($wfi.getId(), $dn.getId(), "resolvedIn"));
end
