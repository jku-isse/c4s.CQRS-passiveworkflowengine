@startuml

allowmixing

skin rose

title PPE Core - Class Diagram

package "PPE Data Modeling" {
	
	
	metaclass "StepDefinition" <<InstanceType>>  {
	Map expectedInput
	Map expectedOutput
	Set transitionConditions
	Set QAconstraints
	Map ioMappingRules
	=========
		OCL rule/constraints as text
	}
	
	metaclass "ProcessDefinition" <<InstanceType>>  {

	} 
	
	"StepDefinition" <|-- ProcessDefinition
	
	class "ProcessInstance" <<InstanceType>>  {
		ProcessDefinition definition
	}
	
	class "ProcessStep" <<InstanceType>>  {
		StepDefinition stepDefinition
		State actualState
	  State expectedState
	}
	
	class "SpecificProcessStep" <<InstanceType>> {
		Input in_x 
		Output out_y
		Precondition pre
	  Postcondition post
	  Set QAconstraints
	  DataMapping dm_xy
	=========
		OCL rule/constraints as objects
	}
	

	
	"SpecificProcessStep" -up-|> "ProcessStep"
	
	"ProcessInstance" -up-|> "SpecificProcessStep"
	
	
	ProcessInstance::definition -left-> ProcessDefinition : references
	ProcessStep::stepDefinition -left-> StepDefinition : references
	
	
	struct ProcessDTO {
		serializable process definition
	}
	
}

class ConsistencyRuleType <<InstanceType>> {
	String rule
	boolean hasError
	getEvaluationResult(Instance context)
}

SpecificProcessStep --> ConsistencyRuleType : references

cloud "SerializedProcessDefinition"  {
	component [FileSystemLoader]
	component [ProcessEditor \n (via REST endpoint)]
	component [Stages \n (via REST endpoint and transformer)]

}

SerializedProcessDefinition --> ProcessDTO : provide
ProcessDTO -right-> ProcessDefinition : becomes
ProcessDTO -right-> StepDefinition : becomes









@enduml